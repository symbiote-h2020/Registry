spring.cloud.config.enabled=false
spring.application.name=RegistryTests

## Security activation trigger
registry.security.enabled=false

platform.id=SymbIoTe_Core_AAM

#### AAM SECRET constants
aam.environment.aamAddress=todo
aam.environment.keystoreName=todo
aam.environment.keystorePass=todo
aam.deployment.owner.username=todo
aam.deployment.owner.password=todo
symbIoTe.validation.localaam=true

#tests don't use Netflix cloud service
eureka.client.enabled=false
spring.zipkin.enabled=false

# AMQP configuration
rabbit.host=localhost
rabbit.username=guest
rabbit.password=guest

spring.rabbitmq.template.reply-timeout=20000

symbiote.mongo.dbname.registry=symbiote-core-registry-database-test

rabbit.exchange.platform.name=symbIoTe.platform
rabbit.exchange.platform.type=topic
rabbit.exchange.platform.durable=true
rabbit.exchange.platform.autodelete=false
rabbit.exchange.platform.internal=false

rabbit.exchange.resource.name=symbIoTe.resource
rabbit.exchange.resource.type=topic
rabbit.exchange.resource.durable=true
rabbit.exchange.resource.autodelete=false
rabbit.exchange.resource.internal=false

rabbit.exchange.federation.name=symbIoTe.federation
rabbit.exchange.federation.type=topic
rabbit.exchange.federation.durable=true
rabbit.exchange.federation.autodelete=false
rabbit.exchange.federation.internal=false

rabbit.routingKey.platform.creationRequested=symbIoTe.platform.creationRequested
rabbit.routingKey.platform.creationPerformed=symbIoTe.platform.creationPerformed
rabbit.routingKey.platform.created=symbIoTe.platform.created

rabbit.routingKey.platform.removalRequested=symbIoTe.platform.removalRequested
rabbit.routingKey.platform.removalPerformed=symbIoTe.platform.removalPerformed
rabbit.routingKey.platform.removed=symbIoTe.platform.deleted

rabbit.routingKey.platform.modificationRequested=symbIoTe.platform.updatedRequested
rabbit.routingKey.platform.modificationPerformed=symbIoTe.platform.updatedPerformed
rabbit.routingKey.platform.modified=symbIoTe.platform.updated

rabbit.routingKey.resource.creationRequested=symbIoTe.resource.creationRequested
rabbit.routingKey.resource.creationPerformed=symbIoTe.resource.creationPerformed
rabbit.routingKey.resource.created=symbIoTe.resource.created

rabbit.routingKey.resource.removalRequested=symbIoTe.resource.removalRequested
rabbit.routingKey.resource.removalPerformed=symbIoTe.resource.removalPerformed
rabbit.routingKey.resource.removed=symbIoTe.resource.deleted

rabbit.routingKey.resource.modificationRequested=symbIoTe.resource.modificationRequested
rabbit.routingKey.resource.modificationPerformed=symbIoTe.resource.modificationPerformed
rabbit.routingKey.resource.modified=symbIoTe.resource.updated

rabbit.routingKey.resource.searchRequested=resource.searchRequested
rabbit.routingKey.resource.searchPerformed=resource.searchPerformed

rabbit.routingKey.resource.sparqlSearchRequested=resource.sparqlSearchRequested
rabbit.routingKey.resource.sparqlSearchPerformed=resource.sparqlSearchPerformed

rabbit.routingKey.resource.clearDataRequested=resource.clearDataRequested
rabbit.routingKey.resource.clearDataPerformed=resource.clearDataPerformed

rabbit.routingKey.platform.model.creationRequested=symbIoTe.informationModel.creationRequested
rabbit.routingKey.platform.model.creationPerformed=symbIoTe.informationModel.creationPerformed

rabbit.routingKey.platform.model.removalRequested=symbIoTe.informationModel.removalRequested
rabbit.routingKey.platform.model.removalPerformed=symbIoTe.informationModel.removalPerformed

rabbit.routingKey.platform.model.modificationRequested=symbIoTe.informationModel.modificationRequested
rabbit.routingKey.platform.model.modificationPerformed=symbIoTe.informationModel.modificationPerformed

rabbit.routingKey.platform.resourcesRequested=symbIoTe.platform.resourcesRequested
rabbit.routingKey.platform.model.allInformationModelsRequested=symbIoTe.informationModel.allInformationModelsRequested
rabbit.routingKey.platform.platformDetailsRequested=symbIoTe.platform.platformDetailsRequested

rabbit.routingKey.federation.creationRequested=symbIoTe.federation.creationRequested
rabbit.routingKey.federation.creationPerformed=symbIoTe.federation.creationPerformed
rabbit.routingKey.federation.created=symbIoTe.federation.created

rabbit.routingKey.federation.removalRequested=symbIoTe.federation.removalRequested
rabbit.routingKey.federation.removalPerformed=symbIoTe.federation.removalPerformed
rabbit.routingKey.federation.removed=symbIoTe.federation.deleted

rabbit.routingKey.federation.modificationRequested=symbIoTe.federation.modificationRequested
rabbit.routingKey.federation.modificationPerformed=symbIoTe.federation.modificationPerformed
rabbit.routingKey.federation.modified=symbIoTe.federation.updated

rabbit.routingKey.federation.getFederationForPlatform=symbIoTe.federation.getForPlatform
rabbit.routingKey.federation.getAllFederations=symbIoTe.federation.getAll

## Semantic routing keys
rabbit.routingKey.platform.model.validationRequested=symbIoTe.platform.model.validationRequested
rabbit.routingKey.platform.model.validationPerformed=symbIoTe.platform.model.validationPerformed
rabbit.routingKey.platform.model.created=symbIoTe.platform.model.created
rabbit.routingKey.platform.model.modified=symbIoTe.platform.model.modified
rabbit.routingKey.platform.model.removed=symbIoTe.platform.model.removed
rabbit.routingKey.platform.instance.validationRequested=symbIoTe.platform.instance.validationRequested
rabbit.routingKey.platform.instance.validationPerformed=symbIoTe.platform.instance.validationPerformed
rabbit.routingKey.platform.instance.translationRequested=symbIoTe.platform.instance.translationRequested
rabbit.routingKey.platform.instance.translationPerformed=symbIoTe.platform.instance.translationPerformed

rabbit.routingKey.resource.instance.validationRequested=symbIoTe.resource.instance.validationRequested
rabbit.routingKey.resource.instance.validationPerformed=symbIoTe.resource.instance.validationPerformed
rabbit.routingKey.resource.instance.translationRequested=symbIoTe.resource.instance.translationRequested
rabbit.routingKey.resource.instance.translationPerformed=symbIoTe.resource.instance.translationPerformed

##########################################################
## Administration Configuration
##########################################################

# PAAM default configuration
paam.deployment.token.validityMillis=600000

##########################################################
## CRAM Configuration
##########################################################
rabbit.exchange.cram.name=symbIoTe.CoreResourceAccessMonitor
rabbit.exchange.cram.type=direct
rabbit.exchange.cram.durable=true
rabbit.exchange.cram.autodelete=false
rabbit.exchange.cram.internal=false

rabbit.routingKey.cram.getResourceUrls=symbIoTe.CoreResourceAccessMonitor.coreAPI.get_resource_urls
rabbit.routingKey.cram.accessNotifications=symbIoTe.CoreResourceAccessMonitor.coreAPI.accessNotification

##########################################################
## Search popularity
##########################################################
rabbit.exchange.search.name=symbIoTe.Search
rabbit.exchange.search.type=direct
rabbit.exchange.search.durable=true
rabbit.exchange.search.autodelete=false
rabbit.exchange.search.internal=false

rabbit.routingKey.search.popularityUpdates=symbIoTe.search.popularityUpdates

##########################################################
## CRM Configuration
##########################################################
rabbit.exchange.crm.name=symbIoTe.CoreResourceMonitor
rabbit.exchange.crm.type=topic
rabbit.exchange.crm.durable=true
rabbit.exchange.crm.autodelete=false
rabbit.exchange.crm.internal=false

rabbit.routingKey.crm.monitoring=monitoring

##########################################################
## AAM Configuration
##########################################################
symbIoTe.core.interface.url=<TODO pointing to Core interface endpoint>
# should be set properly (format: http(s)://{hostAAM}:{portAAM} - https - when different host, http possible on localhost>
symbIoTe.localaam.url=http://localhost:8443

# amqp general
rabbit.exchange.aam.name=symbIoTe.AuthenticationAuthorizationManager
rabbit.exchange.aam.type=direct
rabbit.exchange.aam.durable=true
rabbit.exchange.aam.autodelete=false
rabbit.exchange.aam.internal=false
# amqp queues
# credentials validation/revocation
rabbit.queue.validate.request=symbIoTe-AuthenticationAuthorizationManager-validate_request
rabbit.queue.manage.revocation.request=symbIoTe-AuthenticationAuthorizationManager-manage_revocation_request
# token attributes management
rabbit.queue.manage.attributes=symbIoTe-AuthenticationAuthorizationManager-manage_local_attributes_request
# users management
rabbit.queue.manage.user.request=symbIoTe-AuthenticationAuthorizationManager-manage_user_request
rabbit.queue.get.user.details=symbIoTe-AuthenticationAuthorizationManager-get_user_details_request
# platform management related
rabbit.queue.manage.platform.request=symbIoTe-AuthenticationAuthorizationManager-manage_platform_request
#AAM 2.0
rabbit.queue.ownedplatformdetails.request=symbIoTe-AuthenticationAuthorizationManager-ownedPlatformDetails_request
#AAM 3.0
rabbit.queue.ownedservices.request=symbIoTe-AuthenticationAuthorizationManager-ownedServices_request
# smart space management related
rabbit.queue.manage.smartspace.request=symbIoTe-AuthenticationAuthorizationManager-manage_smartspace_request

# routing keys
# credentials validation/revocation
rabbit.routingKey.validate.request=symbIoTe.AuthenticationAuthorizationManager.validate_request
rabbit.routingKey.manage.revocation.request=symbIoTe-AuthenticationAuthorizationManager.manage_revocation_request
# token attributes management
rabbit.routingKey.manage.attributes=symbIoTe-AuthenticationAuthorizationManager.manage_local_attributes_request
# users management
rabbit.routingKey.manage.user.request=symbIoTe.AuthenticationAuthorizationManager.manage_user_request
rabbit.routingKey.get.user.details=symbIoTe-AuthenticationAuthorizationManager.get_user_details_request
# platform management related
rabbit.routingKey.manage.platform.request=symbIoTe-AuthenticationAuthorizationManager.manage_platform_request
#AAM 2.0
rabbit.routingKey.ownedplatformdetails.request=symbIoTe.AuthenticationAuthorizationManager.ownedPlatformDetails_request
#AAM 3.0
rabbit.routingKey.ownedservices.request=symbIoTe.AuthenticationAuthorizationManager.ownedServices_request
# smart space management related
rabbit.routingKey.manage.smartspace.request=symbIoTe-AuthenticationAuthorizationManager.manage_smartspace_request